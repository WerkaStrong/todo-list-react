{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["FormField","styled","form","_templateObject","Object","taggedTemplateLiteral","Input","input","_templateObject2","Button","button","_templateObject3","Form","_ref","addNewTask","_useState","useState","_useState2","slicedToArray","newTaskContent","setNewTaskContent","inputRef","useRef","react_default","a","createElement","onSubmit","event","preventDefault","trim","ref","value","type","id","placeholder","onChange","_ref2","target","onClick","current","focus","hover","active","List","ul","styled_templateObject","Item","li","styled_templateObject2","hidden","css","styled_templateObject3","Content","span","_templateObject4","done","_templateObject5","_templateObject6","_ref3","toggleDone","_templateObject7","_ref4","remove","_templateObject8","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","styled_Button","content","ButtonField","div","Buttons_styled_templateObject","Buttons_styled_templateObject2","disabled","Buttons_styled_templateObject3","styled_templateObject4","Buttons","toggleHideDone","setAllDone","className","length","Fragment","Buttons_styled_Button","every","SectionBody","section","Section_styled_templateObject","Header","header","Section_styled_templateObject2","Title","h2","Section_styled_templateObject3","Section_styled_templateObject4","Section","title","body","extraHeaderContent","styled_Header","styled_List","Body","main","Container_styled_templateObject","Container","children","App","_useTasks","setHideDone","_useState3","JSON","parse","localStorage","getItem","_useState4","setTasks","useEffect","setItem","stringify","filter","objectSpread","concat","toConsumableArray","useTasks","src_Container","src_Header","src_Section","src_Form","src_Tasks","src_Buttons","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9b487212.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const FormField = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid black;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background-color:hsl(180, 100%, 25%);\r\n    color: white;\r\n    padding: 10px;\r\n    transition: 1s;\r\n    cursor: pointer;\r\n\r\n        &:hover {\r\n            background: hsl(180, 100%, 35%);\r\n            transform: scale(1.1);\r\n        }\r\n\r\n        &:active {\r\n            background: hsl(180, 100%, 35%);\r\n        }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { FormField, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (newTaskContent === \"\") {\r\n            return;\r\n        }\r\n\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    const inputRef = useRef(null);\r\n    const focusInput = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <FormField onSubmit={onFormSubmit}>\r\n            <Input\r\n                ref={inputRef}\r\n                value={newTaskContent}\r\n                type=\"text\"\r\n                id=\"myText\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <Button\r\n                onClick={focusInput}\r\n                hover\r\n                active\r\n            >\r\n                Dodaj zadanie\r\n            </Button>\r\n        </FormField>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0px;\r\n    word-break: break-word;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    padding: 20px;\r\n    align-items: center;\r\n    border-bottom: 1px solid #ddd;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    @media(max-width: 767px) {\r\n        padding: 5px;\r\n    }\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: white;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 0;\r\n    transition: 1s;\r\n    cursor: pointer;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background: hsl(120, 100%, 25%);\r\n\r\n        &:hover {\r\n            background: hsl(120, 100%, 35%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: hsl(0, 100%, 50%);\r\n\r\n        &:hover {\r\n            background: hsl(0, 100%, 60%);\r\n        }\r\n    `}\r\n\r\n`;","import React from \"react\";\r\nimport { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map(task => (\r\n      <Item\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n      >\r\n        <Button\r\n          onClick={() => toggleTaskDone(task.id)}\r\n          toggleDone\r\n        >\r\n          {task.done ? \"✔\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>\r\n          {task.content}\r\n        </Content>\r\n        <Button\r\n          onClick={() => removeTask(task.id)}\r\n          remove\r\n        >\r\n          🗑\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonField = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: white;\r\n    border: none;\r\n    color:teal;\r\n    width: 170px;\r\n    height: 50px ;\r\n    transition: 1s;\r\n    padding: 1%;\r\n    cursor: pointer;\r\n\r\n    ${({ disabled }) => disabled && css`\r\n        color: #ccc;\r\n    `}\r\n\r\n    ${({ hover }) => hover && css`\r\n        color: hsl(180, 100%, 35%);\r\n    `}\r\n\r\n    @media(max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 0;\r\n        padding: 0,5%;\r\n    }\r\n`;","import React from \"react\";\r\nimport { ButtonField, Button } from \"./styled\";\r\n\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <ButtonField className=\"buttons\">\r\n    {tasks.length > 0 && (\r\n      <React.Fragment>\r\n        <Button\r\n          onClick={toggleHideDone}\r\n        >\r\n          {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n        </Button>\r\n        <Button\r\n          onClick={setAllDone}\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          Ukończ wszystkie\r\n        </Button>\r\n      </React.Fragment>\r\n    )}\r\n  </ButtonField>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const SectionBody = styled.section`\r\n    background-color: white;\r\n    margin: 10px 0;\r\n    box-shadow: 2px #0000;\r\n    display: block;\r\n\r\n    @media(max-width: 767px) {\r\n        padding: 15px;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid #ddd;\r\n\r\n    @media(max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    margin: 0;\r\n\r\n    @media(max-width: 767px) {\r\n        font-size: 20px;\r\n        padding: 10px;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const List = styled.div`\r\n    @media(max-width: 767px) {\r\n        padding: 10px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { SectionBody, Header, Title, List } from \"./styled\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <SectionBody>\r\n        <Header>\r\n          <Title>{title}</Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <List>\r\n            {body}\r\n        </List>\r\n      </SectionBody>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Body = styled.main`\r\n    max-width: 950px;\r\n    padding: 30px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 767px) {\r\n        padding: 10px;  \r\n    }\r\n`;","import React from \"react\";\r\nimport {Body} from \"./styled\"\r\n\r\n\r\nconst Container = ({children}) => (\r\n    <Body>\r\n        {children}\r\n    </Body>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from './Buttons';\r\nimport Section from './Section';\r\nimport Header from './Header';\r\nimport Container from './Container';\r\nimport { useTasks } from './useTasks';\r\n\r\nfunction App() {\r\n  const {\r\n    tasks,\r\n    hideDone,\r\n    toggleHideDone,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask\r\n  } = useTasks();\r\n\r\n\r\n  return (\r\n    <Container className=\"container\">\r\n      <Header title=\"Lista zadań\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n\r\n      <Section\r\n        title=\"Lista zadań\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useTasks() {\r\n    const [hideDone, setHideDone] = useState(false);\r\n    const [tasks, setTasks] = useState(\r\n        JSON.parse(localStorage.getItem(\"tasks\")) || []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const toggleHideDone = () => {\r\n        setHideDone(hideDone => !hideDone);\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task =>\r\n            task.id === id ? { ...task, done: !task.done } : task\r\n        ));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            }\r\n        ]);\r\n    };\r\n\r\n    return ({tasks, hideDone, toggleHideDone, removeTask, toggleTaskDone, setAllDone, addNewTask });\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}