{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","_ref","addNewTask","_useState","useState","_useState2","Object","slicedToArray","newTaskContent","setNewTaskContent","react_default","a","createElement","className","onSubmit","event","preventDefault","trim","value","type","id","placeholder","onChange","_ref2","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","concat","done","onClick","content","Buttons","toggleHideDone","setAllDone","length","Fragment","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","_useState3","JSON","parse","localStorage","getItem","_useState4","setTasks","useEffect","setItem","stringify","src_Container","src_Header","src_Section","src_Form","toConsumableArray","src_Tasks","filter","objectSpread","src_Buttons","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.65cdf04f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({addNewTask}) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (newTaskContent === \"\") {\r\n            return;\r\n        }\r\n\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                type=\"text\"\r\n                className=\"form__input\"\r\n                id=\"myText\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"tasks\">\r\n    {tasks.map(task => (\r\n      <li\r\n        key={task.id}\r\n        className={`tasks__item${task.done && hideDone\r\n          ? \" tasks__item--hidden\"\r\n          : \"\"}\r\n          `}\r\n      >\r\n        <button\r\n          onClick={() => toggleTaskDone(task.id)}\r\n          className=\"tasks__button tasks__button--toggleDone\"\r\n        >\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </button>\r\n        <span className={\r\n          `tasks__content${task.done ? \" tasks__content--done\" : \"\"}`}>\r\n          {task.content}\r\n        </span>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"tasks__button tasks__button--remove\">\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <div className=\"buttons\">\r\n    {tasks.length > 0 && (\r\n      <React.Fragment>\r\n        <button \r\n        onClick={toggleHideDone} \r\n        className=\"buttons__button\">\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </button>\r\n        <button\r\n          onClick={setAllDone}\r\n          className=\"buttons__button\"\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          UkoÅ„cz wszystkie\r\n        </button>\r\n      </React.Fragment>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n          <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__list\">\r\n            {body}\r\n        </div>\r\n      </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState, useEffect } from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from './Buttons';\r\nimport Section from './Section';\r\nimport Header from './Header';\r\nimport Container from './Container';\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  \r\n  const [tasks, setTasks] = useState(\r\n    JSON.parse(localStorage.getItem(\"tasks\")) || []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if(task.id === id) {\r\n        return { ...task, done: !task.done };\r\n      }\r\n\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task, \r\n      done:true,\r\n    })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => \r\n      [...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length -1].id +1 : 1,\r\n      }])\r\n  }\r\n\r\n\r\n  return (\r\n    <Container className=\"container\">\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form addNewTask={addNewTask}/>}\r\n      />\r\n\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks} \r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}