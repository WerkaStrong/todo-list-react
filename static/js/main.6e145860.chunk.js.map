{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","_ref","addNewTask","_useState","useState","_useState2","Object","slicedToArray","newTaskContent","setNewTaskContent","inputRef","useRef","react_default","a","createElement","className","onSubmit","event","preventDefault","trim","ref","value","type","id","placeholder","onChange","_ref2","target","onClick","current","focus","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","concat","done","content","Buttons","toggleHideDone","setAllDone","length","Fragment","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","_useState3","JSON","parse","localStorage","getItem","_useState4","setTasks","useEffect","setItem","stringify","src_Container","src_Header","src_Section","src_Form","toConsumableArray","src_Tasks","filter","objectSpread","src_Buttons","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"+TAsCeA,SAnCF,SAAHC,GAAuB,IAAjBC,EAAUD,EAAVC,WAAUC,EACsBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAjDK,EAAcH,EAAA,GAAEI,EAAiBJ,EAAA,GAalCK,EAAWC,iBAAO,MAKxB,OACIC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOC,SAjBN,SAACC,GAClBA,EAAMC,iBAEiB,KAAnBV,IAIJN,EAAWM,EAAeW,QAC1BV,EAAkB,OAUdG,EAAAC,EAAAC,cAAA,SACIM,IAAKV,EACLW,MAAOb,EACPc,KAAK,OACLP,UAAU,cACVQ,GAAG,SACHC,YAAY,wBACZC,SAAU,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAM,OAAOlB,EAAkBkB,EAAON,UAEvDT,EAAAC,EAAAC,cAAA,UAAQc,QAfG,WACflB,EAASmB,QAAQC,SAcgBf,UAAU,gBAAe,oBCAnDgB,SA9BD,SAAH9B,GAAA,IAAM+B,EAAK/B,EAAL+B,MAAOC,EAAQhC,EAARgC,SAAUC,EAAUjC,EAAViC,WAAYC,EAAclC,EAAdkC,eAAc,OAC1DvB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACXiB,EAAMI,IAAI,SAAAC,GAAI,OACbzB,EAAAC,EAAAC,cAAA,MACEwB,IAAKD,EAAKd,GACVR,UAAS,cAAAwB,OAAgBF,EAAKG,MAAQP,EAClC,uBACA,GAAE,iBAGNrB,EAAAC,EAAAC,cAAA,UACEc,QAAS,kBAAMO,EAAeE,EAAKd,KACnCR,UAAU,2CAETsB,EAAKG,KAAO,SAAM,IAErB5B,EAAAC,EAAAC,cAAA,QAAMC,UAAS,iBAAAwB,OACIF,EAAKG,KAAO,wBAA0B,KACtDH,EAAKI,SAER7B,EAAAC,EAAAC,cAAA,UACEc,QAAS,kBAAMM,EAAWG,EAAKd,KAC/BR,UAAU,uCAAsC,sBCD3C2B,SArBC,SAAHzC,GAAA,IAAM+B,EAAK/B,EAAL+B,MAAOC,EAAQhC,EAARgC,SAAUU,EAAc1C,EAAd0C,eAAgBC,EAAU3C,EAAV2C,WAAU,OAC5DhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZiB,EAAMa,OAAS,GACdjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,SAAQ,KACblC,EAAAC,EAAAC,cAAA,UACAc,QAASe,EACT5B,UAAU,mBACPkB,EAAW,aAAU,QAAQ,mBAEhCrB,EAAAC,EAAAC,cAAA,UACEc,QAASgB,EACT7B,UAAU,kBACVgC,SAAUf,EAAMgB,MAAM,SAAAtB,GAAO,OAAAA,EAAJc,QAC1B,6BCDMS,SAZC,SAAHhD,GAAA,IAAKiD,EAAKjD,EAALiD,MAAOC,EAAIlD,EAAJkD,KAAMC,EAAkBnD,EAAlBmD,mBAAkB,OAC7CxC,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBmC,GAC7BE,GAELxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVoC,MCHEE,EANA,SAAHpD,GAAA,IAAMiD,EAAKjD,EAALiD,MAAK,OACrBtC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKoC,KCMMI,SANG,SAAHrD,GAAA,IAAKsD,EAAQtD,EAARsD,SAAQ,OACxB3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACXwC,KC8EMC,MA1Ef,WAAe,IAAArD,EACmBC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAxC8B,EAAQ5B,EAAA,GAAEoD,EAAWpD,EAAA,GAAAqD,EAEFtD,mBACxBuD,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAAGC,EAAAzD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAD3C1B,EAAK+B,EAAA,GAAEC,EAAQD,EAAA,GAuCtB,OApCAE,oBAAU,WACRJ,aAAaK,QAAQ,QAASP,KAAKQ,UAAUnC,KAC5C,CAACA,IAmCFpB,EAAAC,EAAAC,cAACsD,EAAS,CAACrD,UAAU,aACnBH,EAAAC,EAAAC,cAACuD,EAAM,CAACnB,MAAM,qBACdtC,EAAAC,EAAAC,cAACwD,EAAO,CACNpB,MAAM,qBACNC,KAAMvC,EAAAC,EAAAC,cAACyD,EAAI,CAACrE,WAhBC,SAACuC,GAClBuB,EAAS,SAAAhC,GAAK,SAAAO,OAAAjC,OAAAkE,EAAA,EAAAlE,CACT0B,GAAK,CACR,CACES,UACAD,MAAM,EACNjB,GAAIS,EAAMa,OAASb,EAAMA,EAAMa,OAAS,GAAGtB,GAAK,EAAI,YAatDX,EAAAC,EAAAC,cAACwD,EAAO,CACNpB,MAAM,mBACNC,KACEvC,EAAAC,EAAAC,cAAC2D,EAAK,CACJzC,MAAOA,EACPC,SAAUA,EACVC,WA1CS,SAACX,GAClByC,EAAS,SAAAhC,GAAK,OAAIA,EAAM0C,OAAO,SAAArC,GAAI,OAAIA,EAAKd,KAAOA,OA0C3CY,eAvCa,SAACZ,GACtByC,EAAS,SAAAhC,GAAK,OAAIA,EAAMI,IAAI,SAAAC,GAAI,OAC9BA,EAAKd,KAAOA,EAAEjB,OAAAqE,EAAA,EAAArE,CAAA,GAAQ+B,EAAI,CAAEG,MAAOH,EAAKG,OAASH,SAwC/Ce,mBACExC,EAAAC,EAAAC,cAAC8D,EAAO,CACN5C,MAAOA,EACPC,SAAUA,EACVU,eAtDa,WACrBc,EAAY,SAAAxB,GAAQ,OAAKA,KAsDjBW,WAzCS,WACjBoB,EAAS,SAAAhC,GAAK,OAAIA,EAAMI,IAAI,SAAAC,GAAI,OAAA/B,OAAAqE,EAAA,EAAArE,CAAA,GAC3B+B,EAAI,CACPG,MAAM,eCxBGqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAjF,GAAiD,IAA9CmF,EAAMnF,EAANmF,OAAQC,EAAMpF,EAANoF,OAAQC,EAAMrF,EAANqF,OAAQC,EAAMtF,EAANsF,OAAQC,EAAOvF,EAAPuF,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjF,EAAAC,EAAAC,cAACF,EAAAC,EAAMiF,WAAU,KACflF,EAAAC,EAAAC,cAACiF,EAAG,QAORlB","file":"static/js/main.6e145860.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (newTaskContent === \"\") {\r\n            return;\r\n        }\r\n\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    const inputRef = useRef(null);\r\n    const focusInput = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                ref={inputRef}\r\n                value={newTaskContent}\r\n                type=\"text\"\r\n                className=\"form__input\"\r\n                id=\"myText\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button onClick={focusInput} className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"tasks\">\r\n    {tasks.map(task => (\r\n      <li\r\n        key={task.id}\r\n        className={`tasks__item${task.done && hideDone\r\n          ? \" tasks__item--hidden\"\r\n          : \"\"}\r\n          `}\r\n      >\r\n        <button\r\n          onClick={() => toggleTaskDone(task.id)}\r\n          className=\"tasks__button tasks__button--toggleDone\"\r\n        >\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </button>\r\n        <span className={\r\n          `tasks__content${task.done ? \" tasks__content--done\" : \"\"}`}>\r\n          {task.content}\r\n        </span>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"tasks__button tasks__button--remove\">\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <div className=\"buttons\">\r\n    {tasks.length > 0 && (\r\n      <React.Fragment>\r\n        <button \r\n        onClick={toggleHideDone} \r\n        className=\"buttons__button\">\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </button>\r\n        <button\r\n          onClick={setAllDone}\r\n          className=\"buttons__button\"\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          UkoÅ„cz wszystkie\r\n        </button>\r\n      </React.Fragment>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n          <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__list\">\r\n            {body}\r\n        </div>\r\n      </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState, useEffect } from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from './Buttons';\r\nimport Section from './Section';\r\nimport Header from './Header';\r\nimport Container from './Container';\r\nimport styled from \"styled-components\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const [tasks, setTasks] = useState(\r\n    JSON.parse(localStorage.getItem(\"tasks\")) || []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => \r\n      task.id === id ? { ...task, done: !task.done } : task\r\n    ));\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"container\">\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}